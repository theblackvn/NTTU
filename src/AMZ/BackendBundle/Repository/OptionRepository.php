<?php

namespace AMZ\BackendBundle\Repository;

use Doctrine\ORM\QueryBuilder;

/**
 * OptionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OptionRepository extends \Doctrine\ORM\EntityRepository
{
    private function init($criteria)
    {
        $qb = $this->createQueryBuilder('t');
        if (!empty($criteria['admin_keyword'])) {
            $qb->andWhere(
                $qb->expr()->orX(
                    $qb->expr()->like('t.name', $qb->expr()->literal("%{$criteria['admin_keyword']}%"))
                )
            );
        }
        if (isset($criteria['id'])) {
            $qb->andWhere(
                $qb->expr()->eq('t.id', $criteria['id'])
            );
        }
        if (!empty($criteria['name'])) {
            $qb->andWhere(
                $qb->expr()->like('t.name', $qb->expr()->literal($criteria['name']))
            );
        }
        if (!empty($criteria['type'])) {
            $qb->andWhere(
                $qb->expr()->eq('t.type', $criteria['type'])
            );
        }
        return $qb;
    }

    private function order(array $orderBy = null, QueryBuilder &$qb)
    {
        $qb->addOrderBy('t.name', 'ASC');
    }

    public function findOneBy(array $criteria, array $orderBy = null)
    {
        $qb = $this->init($criteria);
        $qb->setFirstResult(0)
            ->setMaxResults(1);
        $this->order($orderBy, $qb);
        $qb->groupBy('t.id');
        return $qb->getQuery()->getSingleResult();
    }

    public function get($criteria)
    {
        $qb = $this->init($criteria);
        $qb->groupBy('t.id');
        return $qb->getQuery()->getResult();
    }

    public function query($criteria)
    {
        $qb = $this->init($criteria);
        $qb->groupBy('t.id');
        return $qb->getDQL();
    }
}
